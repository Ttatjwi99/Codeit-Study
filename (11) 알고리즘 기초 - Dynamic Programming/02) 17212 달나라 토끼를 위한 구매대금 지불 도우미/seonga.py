# 점화식: D[N] = min(D[N-1], D[N-2], D[N-5], D[N-7]) + 1 
# 단, i가 1,2,5,7이 아니고 i가 7로 나눠떨어지지 않는 경우.(7이 가장 큰 코인이기 때문에 그냥 나눠주면 최소로 지불하는 동전 개수) 

N = int(input())
D = [0] * (N + 1)  # 최소 경우의 수가 담길 변수  # 편의를 위해 +1

for i in range(1, N + 1):  # i번 돌며 N을 구하는 최소의 연산을 구함
    
    # 6처럼 2와 3 모두로 나눠지는 경우도 있으므로 if, elif 사용 X.
    if i ==1 or i == 2 or i == 5 or i == 7:   # N % 2 == 0으로 최소의 연산을 하는 경우
        D[i] = 1
        
    if i % 7 == 0:
        D[i] = i//7   

    # 점화식 적용
    else:
        D[i] = min(D[i-1]+1, D[i-2]+1)
    
        if i>=5:
            D[i] = min(D[i], D[i-5]+1)
        if i>=7:
            D[i] = min(D[i], D[i-7]+1)        
                
print(D[N])
